on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_WEBAPP_PACKAGE_PATH: './dashboard'
  AZURE_SUBSCRIPTION_ID: '1c642d88-5042-4d19-9d49-49be6612a40f'
  AZURE_RESOURCE_GROUP: 'rg-chestist'
  AZURE_REGISTRY_NAME: 'chestistzec'

jobs:
  docker-build:
    name: Build and push docker SMART apps
    runs-on: ubuntu-latest
    steps:
    - 
      name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    -
      name: Checkout
      uses: actions/checkout@v2
    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    -
      name: Login to Azure ACR
      run: |
        az acr login --name ${{ env.AZURE_REGISTRY_NAME }}
    -
      name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: ./chestist-smart-app
        push: true
        tags: '${{ env.AZURE_REGISTRY_NAME }}/chestist-smart-app:${{ github.sha }}'
    

  provision:
    name: Provision Azure Webapp Resources
    runs-on: ubuntu-latest
    needs: docker-build
    outputs: 
      azure-webapp-name: ${{ steps.deploy-bicep.outputs.fhirDashboardAppName }}
    steps:                
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    # Checkout
    - name: Checkout
      uses: actions/checkout@v1
        
    # Deployment of template    
    - name: Deploy BICEP Template
      id: deploy-bicep
      uses: azure/arm-deploy@v1      
      with:
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP }}
        template: ./deploy/smart-on-fhir-apps.bicep  # Set this to the location of your template file
        parameters: 'aadClientSecret=${{ secrets.FHIR_CLIENT_SECRET }} chestistImageName=chestist-smart-app:${{ github.sha }}' # Set this to the location of your parameters file
        failOnStdErr: false


  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest   
    needs: provision 
    environment: production
    steps:    
    - name: Az Login
      uses: Azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - uses: actions/checkout@v2    
    - name: 'Deploy to Azure WebApp'
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ needs.provision.outputs.azure-webapp-name }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
